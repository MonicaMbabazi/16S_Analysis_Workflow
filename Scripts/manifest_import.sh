#!/bin/bash
# This script generates the manifest file and imports data into qiime2 

### Setting qsub parameters for cluster
#$ -cwd
#$ -l h_rt=48:00:00
#$ -l h_vmem=6G
#$ -N Import_Data
#$ -pe sharedmem 1
#$ -R y
#$ -m be -M M.Mbabazi@sms.ed.ac.uk
#$ -P roslin_muwonge_fellowship

. /etc/profile.d/modules.sh

### Load modules
module load anaconda/2024.02
conda activate qiime2-amplicon-2024.5

####################################################################### "GENERATING MANIFEST FILES" ###################################################################################################

# Generating a manifest  file  for your data. If your dataset is not too big for DADA2 step, you can generate one manifest file for the entire dataset.
# However, sometimes the dataset is too big and it requires one to run the analysis in batches, here you need to generate different manifest files. Each batch has to have a manifest file.

# 1. Generating one Manifest file for entire  dataset. Change to the directory that has your fastq files
echo -e "sample-id\tforward-absolute-filepath\treverse-absolute-filepath" > manifest.tsv

for i in *_R1.fastq.gz; do
	n=$(basename "$i" _R1.fastq.gz)
	echo -e "$n\t$PWD/$i\t$PWD/${n}_R2.fastq.gz" >> manifest.tsv
done

# 2. Generating multiple manifest files depending on the batches one wants to run. You can first create the main manifest file as above and then split it into different manifest files.
# Number of batches you want to split into. Assume you have 1890 samples and you want to run them in 15 batches and each batch haviving 126 samples
# Input manifest file. Give the path for the main manifest file (manifest.tsv)

# Set the input file and batch parameters
manifest_file="/absolute-path/manifest.tsv"
batch_size=126
output_dir="/absolute-path/manifest_batches"
batch_prefix="manifest_batch_"

# Create output directory if it doesn't exist
mkdir -p "$output_dir"

# Extract the header
header=$(head -n 1 "$manifest_file")

# Remove the header from the main file and split it into chunks of 126 lines
tail -n +2 "$manifest_file" | split -l $batch_size - "$output_dir/temp_batch_"

# Loop through each batch file generated by `split`
batch_number=1
for file in "$output_dir"/temp_batch_*; do
    # Add the header to each batch file
    sed -i "1i $header" "$file"

    # Rename with batch number and move to target format
    mv "$file" "$output_dir/${batch_prefix}${batch_number}.tsv"

    echo "Generated batch file ${batch_prefix}${batch_number}.tsv"

    # Increment the batch number
    ((batch_number++))
done

echo "All batches have been generated in the directory $output_dir."

############################################################################ Manifest files generated  ########################################################################################

############################################################################ "IMPORTING DATA INTO QIIME2"  
### Set the Results directory. Create it if not present
RESULTS_DIR="absolute-path-output-dir"

# 1. Importing the entire dataset with one manifest file
### You have to create the output directory for your results

qiime tools import \
  --type 'SampleData[PairedEndSequencesWithQuality]' \
  --input-path /absolute-path/manifest.tsv \
  --output-path ${RESULTS_DIR}/demux.qza \
  --input-format PairedEndFastqManifestPhred33V2

# 2. Importing  your dataset using different manifest files of each batch: When dada2 is to be run per batch 
 
# Loop through the number of batches. For this case we have 15 batches
for BatchN in {1..15}; do
    echo "Processing batch $BatchN..."
    
    # Run Qiime2 import for the current batch
    qiime tools import \
        --type 'SampleData[PairedEndSequencesWithQuality]' \
        --input-path /absolute-path/manifest_batches/manifest_batch_"${BatchN}".tsv \
        --output-path ${RESULTS_DIR}/demux_"${BatchN}".qza \
        --input-format PairedEndFastqManifestPhred33V2

    # Check if the command was successful
    if [ $? -eq 0 ]; then
        echo "Batch $BatchN imported successfully."
    else
        echo "Error importing batch $BatchN."
        exit 1  # Exit if there's an error
    fi

done

## Visualize the demux file to check quality for your data and this helps to set parameters for dada2 step
qiime demux summarize \
  --i-data ${RESULTS_DIR}/demux.qza \
  --o-visualization ${RESULTS_DIR}/demux.qzv
################################################################################ Data Imported into Qiime #################################################################################################
